services:
  pgsql:
    image: 'pgvector/pgvector:0.8.0-pg17'
    container_name: '${COMPOSE_PROJECT_NAME}_pgsql'
    ports:
      - '${DB_PORT:-5432}:5432'
    environment:
      POSTGRES_MULTIPLE_DATABASES: tatoo,tatoo_test
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE:-default}'
      POSTGRES_USER: '${DB_USER?:err}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'sailpgsql:/var/lib/postgresql/data'
      - ./docker/pg/scripts:/docker-entrypoint-initdb.d
    networks:
      - sail
    healthcheck:
      test: ['CMD', 'pg_isready', '-q', '-d', '${DB_DATABASE:-default}', '-U', '${DB_USER}']
      retries: 3
      timeout: 5s

  minio:
    image: minio/minio:latest
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    ports:
      - '9000:9000'
      - '9001:9001'
    healthcheck:
      test: ['CMD', 'mc', 'ready', 'local']
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: '${COMPOSE_PROJECT_NAME}_redis'
    ports:
      - '${REDIS_PORT:-6379}:6379'
    networks:
      - sail
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 5

  mailpit:
    image: 'axllent/mailpit:latest'
    ports:
      - '${FORWARD_MAILPIT_PORT:-1025}:1025'
      - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'

networks:
  sail:
    driver: bridge

volumes:
  sailpgsql:
  minio_data: {}
